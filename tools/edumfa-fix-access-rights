#!/usr/bin/env python

__version__ = "0.1"
import sys
from getopt import GetoptError, getopt
from shlex import quote as shlex_quote
from subprocess import call


def usage():
    print("""
    Parameter:
    -f <edumfa.cfg file>
    -u <edumfa user>
    -h : help
    """)


def fix_rights(file, user):
    # READ the configs
    conf = {"__file__": file}
    exec(compile(open(file).read(), file, "exec"), conf)

    # Create the user
    try:
        call(f"/usr/sbin/adduser  --system {shlex_quote(user)}", shell=True)
        print(f"Created user {user}")
    except Exception as e:
        print(f"Failed to create user {user}: {str(e)}")

    # fix the file itself!
    try:
        call(f"chmod 640 {shlex_quote(file)}", shell=True)
        call(f"chown {shlex_quote(user)}:root {shlex_quote(file)}", shell=True)
        print(f"Fixed access rights for {file}")
    except Exception as _e:
        print(f"Failed to fix access rights for {file}")

    # Fix the encryption file
    try:
        call(f"chmod 400 {shlex_quote(conf.get('EDUMFA_ENCFILE'))}", shell=True)
        call(
            f"chown {shlex_quote(user)} {shlex_quote(conf.get('EDUMFA_ENCFILE'))}",
            shell=True,
        )
        print(f"Fixed access rights for {conf.get('EDUMFA_ENCFILE')}")
    except Exception as _e:
        print(f"Failed to fix access rights for {conf.get('EDUMFA_ENCFILE')}")

    # fix the audit key
    try:
        call(
            f"chmod 400 {shlex_quote(conf.get('EDUMFA_AUDIT_KEY_PRIVATE'))}",
            shell=True,
        )
        call(
            f"chown {shlex_quote(user)} {shlex_quote(conf.get('EDUMFA_AUDIT_KEY_PRIVATE'))}",
            shell=True,
        )
        print(f"Fixed access rights for {conf.get('EDUMFA_AUDIT_KEY_PRIVATE')}")
    except Exception as _e:
        print(f"Failed to fix access rights for {conf.get('EDUMFA_AUDIT_KEY_PRIVATE')}")

    # TODO: logfile


def main():
    file = ""
    user = ""
    try:
        opts, args = getopt(sys.argv[1:], "f:u:h", ["file=", "user=", "help"])

    except GetoptError:
        print("There is an error in your parameter syntax:")
        usage()
        sys.exit(1)

    for opt, arg in opts:
        if opt in ("-f", "--file"):
            file = arg
        elif opt in ("-h", "--help"):
            usage()
            sys.exit(1)
        elif opt in ("-u", "--user"):
            user = arg

    if file and user:
        fix_rights(file, user)
    else:
        usage()
        sys.exit(2)


if __name__ == "__main__":
    main()

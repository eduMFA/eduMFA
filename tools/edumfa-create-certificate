#!/usr/bin/env python

import os
import sys
from getopt import GetoptError, getopt
from shlex import quote as shlex_quote
from subprocess import call

__version__ = "0.1"
CONFIG_FILE = "/etc/apache2/sites-available/privacyidea"


def usage():
    print(
        f"""
    Parameter:
    -f <apache config file> (Default: {CONFIG_FILE})
    -h : help
    """
    )


def create_keys(file):
    print("Creating certificate...")
    """
    Read
    SSLCertificateFile    /etc/ssl/certs/edumfaserver.pem
    SSLCertificateKeyFile /etc/ssl/private/edumfaserver.key
    """
    key = None
    cert = None
    f = open(file)
    for l in f:
        if l.strip()[:18] == "SSLCertificateFile":
            cert = l.split()[1]
        elif l.strip()[:21] == "SSLCertificateKeyFile":
            key = l.split()[1]
    f.close()

    if key and cert:
        command = (
            f"openssl req -x509 -newkey rsa:2048 -keyout {shlex_quote(key)} -out {shlex_quote(cert)} "
            "-days 1000 -subj /CN=privacyideaserver -nodes"
        )
        r = call(command, shell=True)
        if r == 0:
            print("created key and cert...")
            os.chmod(key, 0x400)
        else:
            print(f"Failed to create key and cert: {r}")
            sys.exit(r)

    else:
        print("Could not find key and cert!")
        print(f"key: {key}")
        print(f"cert: {cert}")
        sys.exit(2)


def main():
    fname = CONFIG_FILE
    try:
        opts, args = getopt(sys.argv[1:], "f:", ["file="])

    except GetoptError:
        print("There is an error in your parameter syntax:")
        usage()
        sys.exit(1)

    for opt, arg in opts:
        if opt in ("-f", "--file"):
            fname = arg
        elif opt in ("-h", "--help"):
            usage()
            sys.exit(1)

    if fname:
        create_keys(fname)
    else:
        usage()
        sys.exit(2)


if __name__ == "__main__":
    main()

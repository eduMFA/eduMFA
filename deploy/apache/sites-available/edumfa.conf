<VirtualHost _default_:443>
	ServerAdmin webmaster@localhost
	# You might want to change this
	ServerName localhost

	DocumentRoot /var/www
	<Directory />
		# For Apache 2.4 you need to set this:
		Require all granted
		Options FollowSymLinks
		AllowOverride None
	</Directory>

        # Yubico servers use /wsapi/2.0/verify as the path in the
        # validation URL. Some tools (e.g. Kolab 2fa) let the 
        # user/admin change the api host, but not the rest of
        # the URL. Uncomment the following two lines to reroute 
        # the api URL internally to eduMFAs /ttype/yubikey.
        #RewriteEngine  on
        #RewriteRule    "^/wsapi/2.0/verify"  "/ttype/yubikey" [PT]

	# We can run several instances on different paths with different configurations
	WSGIScriptAlias /      /etc/edumfa/edumfaapp.wsgi
	#WSGIScriptAlias /instance1      /home/edumfa/src/edumfa/deploy/edumfaapp1.wsgi
	#WSGIScriptAlias /instance2      /home/edumfa/src/edumfa/deploy/edumfaapp2.wsgi
	#WSGIScriptAlias /instance3      /home/edumfa/src/edumfa/deploy/edumfaapp3.wsgi
	#
	# The daemon is running as user 'edumfa'
	# This user should have access to the encKey database encryption file
	WSGIDaemonProcess edumfa processes=1 threads=15 display-name=%{GROUP} user=edumfa
	WSGIProcessGroup edumfa
	WSGIApplicationGroup %{GLOBAL}
	WSGIPassAuthorization On

	ErrorLog /var/log/apache2/error.log

	LogLevel warn
	# Do not use %q! This will reveal all parameters, including setting PINs and Keys!
	# Using SSL_CLINET_S_DN_CN will show you, which administrator did what task
	LogFormat "%h %l %u %t %>s \"%m %U %H\"  %b \"%{Referer}i\" \"%{User-agent}i\"" eduMFA
	CustomLog /var/log/apache2/ssl_access.log eduMFA

	#   SSL Engine Switch:
	#   Enable/Disable SSL for this virtual host.
	SSLEngine on
        SSLProtocol ALL -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
	SSLHonorCipherOrder On
	SSLCipherSuite          ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
	SSLCompression          off
	SSLSessionTickets       off

	# You can turn on HSTS. But as long as you have no valid certificate, this can cause
	# some trouble
	# HSTS (mod_headers is required) (1209600 seconds = 2 weeks)
	# Header always set Strict-Transport-Security "max-age=1209600"


	#   If both key and certificate are stored in the same file, only the
	#   SSLCertificateFile directive is needed.
	SSLCertificateFile    /etc/ssl/certs/edumfaserver.pem
	SSLCertificateKeyFile /etc/ssl/private/edumfaserver.key

	<FilesMatch "\.(cgi|shtml|phtml|php)$">
		SSLOptions +StdEnvVars
	</FilesMatch>
	<Directory /usr/lib/cgi-bin>
		SSLOptions +StdEnvVars
	</Directory>
	BrowserMatch ".*MSIE.*" \
		nokeepalive ssl-unclean-shutdown \
		downgrade-1.0 force-response-1.0


</VirtualHost>

# If you want to forward http request to https enable the
# following virtual host.
<VirtualHost _default_:80>
	# This will enable the Rewrite capabilities
	RewriteEngine On

	# This checks to make sure the connection is not already HTTPS
	RewriteCond %{HTTPS} !=on
	RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R,L]
</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet

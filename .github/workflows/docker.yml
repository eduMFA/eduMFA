name: docker

permissions:
  contents: read

on:
  push:
    paths:
      - '.github/workflows/docker.yml'
      - 'deploy/docker/**'
      - 'edumfa/**/*.py'
      - 'tools/**'
      - '.docerignore'
      - 'Dockerfile'
      - 'edumfa-manage'
      - 'pyproject.toml'
      - 'requirements.txt'
      - 'setup.py'
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  docker:
    runs-on: ubuntu-latest
    name: docker image
    permissions:
      packages: write
    env:
        REGISTRY: ghcr.io
        IMAGE_NAME: ${{ github.repository }}  
    steps:
      - uses: actions/checkout@v5
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/') || github.ref_name == github.event.repository.default_branch) || github.event_name == 'workflow_dispatch' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }},mode=max